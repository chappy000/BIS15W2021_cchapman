if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()                            # To install core packages or update installed packages
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()                            # To install core packages or update installed packages
BiocManager::install(c("ShortRead", "Biostrings"))# Install specific packages
install.packages("qtl")
install.packages("qtlcharts")
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
?read.cross
sug <- read.cross("csv", "https://rqtl.org", "sug.csv",
genotypes=c("CC", "CB", "BB"), alleles=c("C", "B"))
summary(sug)
head(sug$pheno)
nind(sug)    # No. individuals
nphe(sug)    # No. phenotypes
nchr(sug)    # No. chromosomes
totmar(sug)  # Total markers
nmar(sug)    # No. markers on each chromosome
plot(sug)
#?plotMissing
plotMissing(sug, main="")
plotMissing(sug, main="", reorder=1)
#?plotMap
plotMap(sug)
plotMap(sug,show.marker.names=TRUE)
#?plotPheno
plotPheno(sug, pheno.col=1)
plotPheno(sug, pheno.col=2)
plotPheno(sug, pheno.col=3)
plotPheno(sug, pheno.col=4)
iplotMap(sug) #D7MIT31
iplotCorr(sug$pheno)
iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
corrplot <- iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
htmlwidgets::saveWidget(corrplot, file="iplotCorr_example.html")
sug <- calc.genoprob(sug, step=1)
out.em <- scanone(sug)
out.em2 <- scanone(sug, pheno.col=1:4)
summary(out.em)
summary(out.em2)
summary(out.em, threshold=3)
plot(out.em)
plot(out.em, chr=c(7,15), ylab="LOD Score")
iplotScanone(out.em)
iplotScanone(out.em, chr=c(7,15))
iplotScanone(out.em, sug)
iplotScanone(out.em, sug, chr=c(7,15))
data(grav)
summary(grav)
plotMap(grav)
iplotMap(grav)
head(grav$pheno)
iplotCorr(grav$pheno)
iplotCurves(grav$pheno)
times1 <- as.numeric(sub("T", "", phenames(grav)))/60
times1
times <- attr(grav, "time")
times
#?attr
phe <- grav$pheno
head(phe)
iplotCurves(phe, times)
iplotCurves(phe, times, chartOpts=list(curves_xlab="Time (hrs)",
curves_ylab="Response"))
iplotCurves(phe, times, phe[,c("T30", "T240")], phe[,c("T240", "T480")],
chartOpts=list(curves_xlab="Time", curves_ylab="Root tip angle",
scat1_xlab="Angle at 30 min", scat1_ylab="Angle at 4 hrs",
scat2_xlab="Angle at 4 hrs", scat2_ylab="Angle at 8 hrs"))
grav <- calc.genoprob(grav, step=1)
out.em <- scanone(grav, pheno.col=1:nphe(grav))
summary(out.em)
times_m <- c("T30", "T240", "T480")
times_clear <- c("30 mins", "4 hours", "8 hours")
times_number <- match(times_m, phenames(grav))
for(i in 1:length(times_m))
print(iplotScanone(out.em, lodcolumn=times_number[i], chartOpts=list(title=times_clear[i])))
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
?diff
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
data_list <- list.files("data/us.individual_collar_data", full.names = TRUE)
data_list
data_list <- list.files("data/us.individual_collar_data", full.names = TRUE)
data_list
data_list <- list.files(path = "data/us.individual_collar_data", full.names = TRUE)
data_list
getwd()
data_list <- list.files(path = "data/us.individual_collar_data", full.names = TRUE)
data_list
for (i in 1:length(data_list)){
data0 <- as.data.frame(read_csv(data_files3[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = data_files3[i], x = "longitude", y = "latitude")
)
}
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = data_list[i], x = "longitude", y = "latitude")
)
data_list <- list.files(path = "data/us.individual_collar_data", full.names = TRUE)
data_list
for (i in 1:length(data_list)){
data0 <- as.data.frame(read_csv(data_list[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = data_list[i], x = "longitude", y = "latitude")
)
}
data_list <- list.files(path = "data/us_individual_collar_data", full.names = TRUE)
data_list
data_list <- list.files(path = "data/us_individual_collar_data", full.names = TRUE)
data_list
for (i in 1:length(data_list)){
data0 <- as.data.frame(read_csv(data_list[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = data_list[i], x = "longitude", y = "latitude")
)
}
full_data_list <- lapply(data_list, read_csv)
all_collar_data <- bind_rows(full_data_list)
all_collar_data
all_collar_data %>%
summarise(max_lat = max(lat), min_lat = min(lat), max_long = max(long), min_long = min(long)))
all_collar_data %>%
summarise(max_lat = max(lat), min_lat = min(lat), max_long = max(long), min_long = min(long))
lat <- c(26.6116, 41.58802)
long <- c(-106.3343, -122.6017)
lat <- c(26.6116, 41.58802)
long <- c(-106.3343, -122.6017)
bbox <- make_bbox(long, lat, f = 0.5)
map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map)
for (i in 1:length(data_list)){
data0 <- as.data.frame(read_csv(data_list[i]))
print(
ggmap(map)+
geom_path(data = data0, aes(long, lat))+
geom_point(data = data0, aes(long, lat))+
labs(title = data_list[i], x = "longitude", y = "latitude")
)
}
#?hyper
data(hyper)
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
#?read.cross
sug <- read.cross("csv", "https://rqtl.org", "sug.csv",
genotypes=c("CC", "CB", "BB"), alleles=c("C", "B"))
summary(sug)
head(sug$pheno)
nind(sug)    # No. individuals
nphe(sug)    # No. phenotypes
nchr(sug)    # No. chromosomes
totmar(sug)  # Total markers
nmar(sug)    # No. markers on each chromosome
plot(sug)
#?plotMissing
plotMissing(sug, main="")
plotMissing(sug, main="", reorder=1)
#?plotMap
plotMap(sug)
plotMap(sug,show.marker.names=TRUE)
#?plotPheno
plotPheno(sug, pheno.col=1)
plotPheno(sug, pheno.col=2)
plotPheno(sug, pheno.col=3)
plotPheno(sug, pheno.col=4)
iplotMap(sug) #D7MIT31
iplotCorr(sug$pheno)
iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
corrplot <- iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
htmlwidgets::saveWidget(corrplot, file="iplotCorr_example.html")
sug <- calc.genoprob(sug, step=1)
out.em <- scanone(sug)
out.em2 <- scanone(sug, pheno.col=1:4)
summary(out.em)
summary(out.em2)
summary(out.em, threshold=3)
plot(out.em)
plot(out.em, chr=c(7,15), ylab="LOD Score")
iplotScanone(out.em)
iplotScanone(out.em, chr=c(7,15))
iplotScanone(out.em, sug)
iplotScanone(out.em, sug, chr=c(7,15))
data(grav)
iplotCurves(grav$pheno)
times1 <- as.numeric(sub("T", "", phenames(grav)))/60
times1
times <- attr(grav, "time")
times
#?attr
phe <- grav$pheno
head(phe)
iplotCurves(phe, times)
iplotCurves(phe, times, chartOpts=list(curves_xlab="Time (hrs)",
curves_ylab="Response"))
iplotCurves(phe, times, phe[,c("T30", "T240")], phe[,c("T240", "T480")],
chartOpts=list(curves_xlab="Time", curves_ylab="Root tip angle",
scat1_xlab="Angle at 30 min", scat1_ylab="Angle at 4 hrs",
scat2_xlab="Angle at 4 hrs", scat2_ylab="Angle at 8 hrs"))
grav <- calc.genoprob(grav, step=1)
out.em <- scanone(grav, pheno.col=1:nphe(grav))
summary(out.em)
times_m <- c("T30", "T240", "T480")
times_clear <- c("30 mins", "4 hours", "8 hours")
times_number <- match(times_m, phenames(grav))
for(i in 1:length(times_m))
print(iplotScanone(out.em, lodcolumn=times_number[i], chartOpts=list(title=times_clear[i])))
summary(hyper)
nmar(hyper)
iplotMap(hyper)
plotMissing(sug, main="", reorder=1)
plotMissing(sug, main="")
plotMissing(sug, main="", reorder = 1)
drop.nullmarkers(hyper)
nmar(hyper)
hyper_dropped <- drop.nullmarkers(hyper)
nmar(hyper_dropped)
nmar(hyper)
plotMissing(sug, main="")
?plotMissing
hyper_dropped <- calc.genoprob(hyper_dropped, step=1)
hyper_dropped
qtl_scan <- scanone(hyper_dropped, pheno.col=1:2)
qtl_scan <- scanone(hyper_dropped, pheno.col= c("bp", "sex"))
qtl_scan <- scanone(hyper_dropped, pheno.col= c("bp", "sex"))
qtl_scan <- scanone(hyper_dropped)
qtl_scan
out.em
head(hyper_dropped$pheno)
qtl_scan <- scanone(hyper_dropped, pheno.col = 1:2)
out.em2
head(hyper_dropped$pheno)
summary(qtl_scan)
qtl_scan <- scanone(hyper_dropped, pheno.col = 2)
qtl_scan <- scanone(hyper_dropped, pheno.col = 1)
qtl_scan <- scanone(hyper_dropped, pheno.col = 1:2)
hyper_dropped$pheno <- as.numeric(hyper_dropped$pheno)
hyper_dropped$pheno$sex <- as.numeric(hyper_dropped$pheno$sex)
head(hyper_dropped$pheno)
hyper_dropped$pheno$sex <- as.factor(hyper_dropped$pheno$sex)
head(hyper_dropped$pheno)
hyper_dropped <- drop.nullmarkers(hyper)
head(hyper_dropped$pheno)
plot(qtl_scan, ylab="LOD Score")
iplotScanone(qtl_scan)
summary(qtl_scan, threshold=1)
iplotScanone(qtl_scan, chr = c(1, 2, 4, 5, 6, 15))
knitr::opts_chunk$set(echo = TRUE)
microbiome_untidy
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
microbiome_untidy <- read_csv("C:/Users/Claire Chapman/Desktop/BIS15L_Project_Group11/untidy_data/ASD meta abundance 2.csv")
microbiome_untidy <- janitor::clean_names(microbiome_untidy)
microbiome_untidy
microbiome_untidy_longer <- microbiome_untidy %>%
pivot_longer(-taxonomy, names_to = "condition", values_to = "abundance")
microbiome_untidy_longer
